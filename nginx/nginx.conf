events {}

http {
    # HTTP를 HTTPS로 리디렉션
    server {
        listen 80;
        server_name librarymanagement.duckdns.org;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS 설정
    server {
        listen 443 ssl;
        server_name librarymanagement.duckdns.org;

        ssl_certificate /etc/letsencrypt/live/librarymanagement.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/librarymanagement.duckdns.org/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        # 모든 요청에 대해 캐시 무시 헤더 추가
       add_header Cache-Control no-store;
       add_header Pragma no-cache;
       add_header Expires 0;


        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://backend:8282;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /auth/ {
            proxy_pass http://backend:8282;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    }
}
